apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file(".buildconf/keystore.properties")
def keystoreProperties = new Properties()
def CONFIG = { k -> "\"${project.properties.get(k)}\"" }
def SUNAT_URL = "SUNAT_URL"
def CLIENT_ID = "CLIENT_ID"
def CLIENT_SECRET = "CLIENT_SECRET"
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "pe.gob.sunat.controladuanero3.ingreso.reconfisico.diligenciamovil"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", "Sunat-DiligenciaMovil-$versionName")
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }

    }
    buildTypes {
        release {
            buildConfigField "String", SUNAT_URL, CONFIG("production.sunat.gateway.url")
            buildConfigField "String", CLIENT_ID, CONFIG("production.client.id")
            buildConfigField "String", CLIENT_SECRET, CONFIG("production.client.secret")
            minifyEnabled false
            debuggable false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        developer {
            initWith debug
            buildConfigField "String", SUNAT_URL, CONFIG("developer.sunat.gateway.url")
            buildConfigField "String", CLIENT_ID, CONFIG("developer.client.id")
            buildConfigField "String", CLIENT_SECRET, CONFIG("developer.client.secret")
            debuggable true
        }
        local {
            initWith debug
            buildConfigField "String", SUNAT_URL, CONFIG("local.sunat.gateway.url")
            buildConfigField "String", CLIENT_ID, CONFIG("local.client.id")
            buildConfigField "String", CLIENT_SECRET, CONFIG("local.client.secret")
            debuggable true
        }
        qa {
            initWith debug
            buildConfigField "String", SUNAT_URL, CONFIG("qa.sunat.gateway.url")
            buildConfigField "String", CLIENT_ID, CONFIG("qa.client.id")
            buildConfigField "String", CLIENT_SECRET, CONFIG("qa.client.secret")
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}
ext {
    androidVersion = "28.0.0"
    retrofitVersion = '2.4.0'
    daggerVersion = '2.15'
    butterKnifeVersion = '8.8.1'
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //----------android librerias de soporte----------------------------------
    implementation "com.android.support:appcompat-v7:$androidVersion"
    implementation "com.android.support:support-v13:$androidVersion"
    implementation "com.android.support:design:$androidVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:mediarouter-v7:$androidVersion"
    //----------test----------------------------------
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

dependencies {
    //---------- Cliente REST----------------------------------
    //Retrofit para APIs Rest
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"

    //Parseo de JSON
    implementation "com.squareup.retrofit2:converter-jackson:$retrofitVersion"

    //Logging HTTP
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    // Dagger
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"

    //Butter Knife
    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    //RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.x.y"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    // librerias de terceros dise√±o ------------------------------
    implementation "com.android.support:cardview-v7:$androidVersion"
    implementation "com.android.support:recyclerview-v7:$androidVersion"
    implementation "com.android.support:support-vector-drawable:$androidVersion"
    // ripple effect
    implementation 'com.balysv:material-ripple:1.0.2'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    // image loader
    implementation 'com.mikhaellopez:circularimageview:3.2.0'
    // circle image view
    //splash
    implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'
    //log
    implementation 'com.jakewharton.timber:timber:4.7.1'
    //arquitectura MVVM
    implementation "android.arch.lifecycle:extensions:1.1.0"
    implementation "android.arch.lifecycle:viewmodel:1.1.0"
    // date & time picker
    implementation 'com.wdullaer:materialdatetimepicker:3.2.0'

}

